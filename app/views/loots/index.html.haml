- form_for @search do |f|
  %fieldset
    %legend Loot search
    - f.fields_for @search.conditions do |loots|
      .form_row
        - loots.fields_for loots.object.toon do |toon|
          = toon.label :name_contains_any, "Toon"
          = toon.text_field :name_contains_any
        - loots.fields_for loots.object.item do |item|
          = item.label :name_contains_any, "Item"
          = item.text_field :name_contains_any
      .form_row
        = loots.label :status
        = loots.select :status, Loot::STATUSES, :include_blank => "any"
        - loots.fields_for loots.object.item do |item|
          = item.label :inventory_type
          = item.select :inventory_type, Item::INV_TYPE_HASH.invert.sort, :include_blank => "any"
          = item.label :subclass_name
          = item.select :subclass_name, Item::SUBCLASSES.sort, :include_blank => "any"
          
    = f.submit "Search"
    = link_to "Reset fields", loots_path
- if @loots_count == 0
  No recourds found.
- else
  = search_records_summary(@search)
  == &nbsp;&nbsp;&nbsp; Show #{@search.per_page==50 ? 50 : per_page_link(50)} / #{@search.per_page==200 ? 200 : per_page_link(200)} per page.
  .page_links= page_links
  %table
    %tr
      %th= order_by_link({:toon => :name}, :text => "Toon")
      %th= order_by_link({:toon => {:job => :name}}, :text => "Class")
      %th= order_by_link(:status, :text => "Priority")
      %th= order_by_link({:item => :name}, :text => "Item")
      %th= order_by_link({:item => :subclass_name}, :text => "Type")
      %th= order_by_link({:item => :inventory_type}, :text => "Inv Slot")
      %th Actions
      / %th PC
      / %th SC
      %th= order_by_link({:raid => :start_at}, :text => "Raid Date")
    - @loots.each do |loot|
      %tr
        %td= loot.toon.name
        %td= formatted_job(loot.toon.job)
        %td= loot.status.capitalize
        %td= loot.item.name
        %td.item_subclass= loot.item.subclass_name
        %td.item_slot= inventory_type_name(loot.item.inventory_type)
        %td
        %td= loot.raid.start_at.to_s(:raid)
  .page_links= page_links
  